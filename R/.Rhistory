}
}else{
fit=try(glm(otu_table0[,i]~1+offset(offsets),family = poisson))
mu=exp(coef(fit))
params[i,]=c(mu,0)
}
}
mu
length(mu)
otu.tab <- t(throat.otu.tab)
require(GUniFrac)
require(vegan)
require(DESeq2)
source('GMPR.R')
data(throat.otu.tab)
data(throat.meta)
dim(throat.otu.tab)
dim(otu_table0)
depths=colSums(otu_table0)
length(depths)
dim(otu_table0)
fit.NB<-function(otu_table,offset.type=c('sizefactor','depth')){
offset.type=match.arg(offset.type)
otu_table0=as.data.frame(otu_table)
otu_table0=as.matrix(otu_table0)
notu=ncol(otu_table0)
sfs=apply(otu_table0,1,mean); sfs=sfs/median(sfs)
depths=rowSums(otu_table0)
params=matrix(NA,notu,ncol=2)
colnames(params)=c('mu','phi')
if(offset.type=='depth') {
offsets=log(depths)
}else if(offset.type=='sizefactor'){
offsets=sfs
}
for (i in 1:notu) {
message(i)
if(sum(otu_table0[,i])>2){
fit=try(glm.nb(otu_table0[,i]~1+offset(offsets)))
if(methods::is(fit,"try-error")) {
fit=try(glm(otu_table0[,i]~1+offset(offsets),family = poisson))
mu=exp(coef(fit))
params[i,]=c(mu,0)
}else{
phi=1/fit$theta
mu=exp(coef(fit))
if(offset.type=='depth') mu=mean(exp(coef(fit))*depths[i])
params[i,]=c(mu,phi)
}
}else{
fit=try(glm(otu_table0[,i]~1+offset(offsets),family = poisson))
mu=exp(coef(fit))
params[i,]=c(mu,0)
}
}
list(otu.mat=otu_table0,mu=params[,'mu'],phi=params[,'phi'])
}
fit1=fit.NB(otu_table,'sizefactor')
fit2=fit.NB(otu_table,'depth')
cor(fit1$mu,fit2$mu)
head(fit1$mu)
summary(fit1$mu)
summary(fit2$mu)
sfs
range(sfs)
summary(fit2$mu)
summary(fit1$mu)
cor(sfs,depths)
sfs=apply(otu_table0,1,mean); sfs=sfs/median(sfs)
depths=rowSums(otu_table0)
length(sfs)
length(depths)
cor(sfs,depths)
fit.NB<-function(otu_table){
offset.type=match.arg(offset.type)
otu_table0=as.data.frame(otu_table)
otu_table0=as.matrix(otu_table0)
notu=ncol(otu_table0)
sfs=apply(otu_table0,1,mean); sfs=sfs/median(sfs)
params=matrix(NA,notu,ncol=2)
colnames(params)=c('mu','phi')
for (i in 1:notu) {
if(sum(otu_table0[,i])>2){
fit=try(glm.nb(otu_table0[,i]~1+offset(log(sfs))))
if(methods::is(fit,"try-error")) {
fit=try(glm(otu_table0[,i]~1+offset(log(sfs)),family = poisson))
mu=exp(coef(fit))
params[i,]=c(mu,0)
}else{
phi=1/fit$theta
mu=exp(coef(fit))
params[i,]=c(mu,phi)
}
}else{
fit=try(glm(otu_table0[,i]~1+offset(log(sfs)),family = poisson))
mu=exp(coef(fit))
params[i,]=c(mu,0)
}
}
list(otu.mat=otu_table0,mu=params[,'mu'],phi=params[,'phi'])
}
fit=fit.NB(otu_table)
fit.NB<-function(otu_table){
otu_table0=as.data.frame(otu_table)
otu_table0=as.matrix(otu_table0)
notu=ncol(otu_table0)
sfs=apply(otu_table0,1,mean); sfs=sfs/median(sfs)
params=matrix(NA,notu,ncol=2)
colnames(params)=c('mu','phi')
for (i in 1:notu) {
if(sum(otu_table0[,i])>2){
fit=try(glm.nb(otu_table0[,i]~1+offset(log(sfs))))
if(methods::is(fit,"try-error")) {
fit=try(glm(otu_table0[,i]~1+offset(log(sfs)),family = poisson))
mu=exp(coef(fit))
params[i,]=c(mu,0)
}else{
phi=1/fit$theta
mu=exp(coef(fit))
params[i,]=c(mu,phi)
}
}else{
fit=try(glm(otu_table0[,i]~1+offset(log(sfs)),family = poisson))
mu=exp(coef(fit))
params[i,]=c(mu,0)
}
}
list(otu.mat=otu_table0,mu=params[,'mu'],phi=params[,'phi'])
}
fit=fit.NB(otu_table)
cor(fit$mu,params$mu)
names(params)
load('~/Dropbox/projects/powmeta/data/combo.params.NB.rda')
names(params)
cor(fit$mu,params$mu)
head(fit$mu)
head(params$mu)
range(fit$mu)
range(params$mu)
fit.NB<-function(otu_table){
otu_table0=as.data.frame(otu_table)
otu_table0=as.matrix(otu_table0)
notu=ncol(otu_table0)
sfs=apply(otu_table0,1,mean); sfs=sfs/median(sfs)
params=matrix(NA,notu,ncol=2)
colnames(params)=c('mu','phi')
for (i in 1:notu) {
if(sum(otu_table0[,i])>2){
fit=try(glm.nb(otu_table0[,i]~1+offset((sfs))))
if(methods::is(fit,"try-error")) {
fit=try(glm(otu_table0[,i]~1+offset((sfs)),family = poisson))
mu=exp(coef(fit))
params[i,]=c(mu,0)
}else{
phi=1/fit$theta
mu=exp(coef(fit))
params[i,]=c(mu,phi)
}
}else{
fit=try(glm(otu_table0[,i]~1+offset((sfs)),family = poisson))
mu=exp(coef(fit))
params[i,]=c(mu,0)
}
}
list(otu.mat=otu_table0,mu=params[,'mu'],phi=params[,'phi'])
}
fit=fit.NB(otu_table)
cor(fit$mu,params$mu)
plogis
fit.ZINB<-function(otu_table){
otu_table0=as.data.frame(otu_table)
otu_table0=as.matrix(otu_table0)
notu=ncol(otu_table0)
sfs=apply(otu_table0,1,mean); sfs=sfs/median(sfs)
params=matrix(NA,notu,ncol=3)
colnames(params)=c('mu','phi','p0')
for (i in 1:notu) {
if(sum(otu_table0[,i])>5){
ctrl=pscl::zeroinfl.control(method = "L-BFGS-B")
ctrl$reltol=NULL
ctrl$factr=1e-3/.Machine$double.eps
fit=try(pscl::zeroinfl(otu_table0[,i]~1+offset(log(sfs))|1, dist = "negbin", link = "logit" , control=ctrl), silent=T)
if(methods::is(fit,"try-error")) {
fit=try(glm.nb(otu_table0[,i]~1+offset(log(sfs))))
phi=1/fit$theta
mu=exp(coef(fit))
params[i,]=c(mu,phi,0)
}else{
mu=exp(fit$coefficients$count)
theta=fit$theta
p0=plogis(fit$coefficients$zero)
params[i,]=c(mu,1/theta,p0)
}
}else{
fit=try(glm.nb(otu_table0[,i]~1+offset(sfs)))
phi=1/fit$theta
mu=exp(coef(fit))
params[i,]=c(mu,phi,0)
}
}
list(otu.mat=otu_table0,mu=params[,'mu'],phi=params[,'phi'],p0=params[,'p0'])
}
fit=fit.ZINB(otu_table)
load('~/Dropbox/projects/powmeta/data/combo.params.ZINB.rda')
names(fit)
cor(fit$mu,params$mu)
summary(fit$mu)
summary(params$mu)
cor(fit$mu,params$mu)
hist(log(fit$mu))
hist(log(fit$phi))
a=list()
a$b=NULL
a
a$c
getwd()
source('powmeta/R/estimation.R')
params=estParams(otu_table,Sigma=NULL,distrib=c('NB'))
Sigma=NULL
is.null(Sigma)
load('~/Dropbox/projects/powmeta/data/combo.params.NB.rda')
params=estParams(otu_table,Sigma=Sigma,distrib=c('NB'))
dim(Sigma)
estParams<-function(otu_table,Sigma=NULL,distrib=c('NB','ZINB','ZIP')){
distrib=match.arg(distrib)
if(is.null(Sigma)) Sigma=estCov(otu_table,distrib)
params=list()
params$Sigma=Sigma
fit_distrib=switch(distrib,ZIP=fit_ZIP, NB=fit_NB, ZINB=fit_ZINB)
out=fit_distrib(otu_table)
params$otu.mat=out$otu.mat
params$mu=out$mu
params$phi=out$phi
params$p0=out$phi
params
# if(distrib=='NB'){
#   return(list(Sigma=Sigma,mu=out$mu,phi=out$phi,otu.mat=out$otu.mat))
# }else if(distrib=='ZINB'){
#   return(list(Sigma=Sigma,mu=out$mu,phi=out$phi,p0=out$p0,otu.mat=out$otu.mat))
# }else if(distrib=='ZIP'){
#   return(list(Sigma=Sigma,mu=out$mu,p0=out$p0,otu.mat=out$otu.mat))
# }
}
dim(Sigma)
load('~/Dropbox/projects/powmeta/data/combo.params.ZINB.rda')
Sigma=params$Sigma
params=estParams(otu_table,Sigma=Sigma,distrib=c('NB'))
source('estimation.R')
setwd('powmeta/R')
source('estimation.R')
source('estimation.R')
est.edgeR=function(X){
x=DGEList(counts=X,lib.size=colSums(X))
y=estimateCommonDisp(x)
y= suppressWarnings(estimateTrendedDisp(y))
y=estimateTagwiseDisp(y)
sfs=colMeans(X);sfs=sfs/median(sfs)
X=sweep(X,2,sfs,FUN='/')
lmu=log(apply(X,1,mean))
phi=y$tagwise.dispersion
list(seqDepth=y$sample$lib.size, lmu=lmu, lphi=log(phi))
}
estCov<-function(otu_table,distrib=c('NB','ZINB','ZIP')){ #row is sample, col is OTU
distrib=match.arg(distrib)
networks=magma(data=otu_table, distrib=distrib,criterion.select="stars")
lambda=networks$opt.lambda
network=magma(data=otu_table, distrib=distrib, lambda = lambda) #with fixed lambda
icov=network$icov
icov=as.data.frame(icov)
Sigma=prec2cov(icov)
Sigma
}
fit.NB<-function(otu_table){
otu_table0=as.data.frame(otu_table)
otu_table0=as.matrix(otu_table0)
notu=ncol(otu_table0)
sfs=apply(otu_table0,1,mean); sfs=sfs/median(sfs)
params=matrix(NA,notu,ncol=2)
colnames(params)=c('mu','phi')
for (i in 1:notu) {
if(sum(otu_table0[,i])>2){
fit=try(glm.nb(otu_table0[,i]~1+offset(log(sfs))))
if(methods::is(fit,"try-error")) {
fit=try(glm(otu_table0[,i]~1+offset(log(sfs)),family = poisson))
mu=exp(coef(fit))
params[i,]=c(mu,0)
}else{
phi=1/fit$theta
mu=exp(coef(fit))
params[i,]=c(mu,phi)
}
}else{
fit=try(glm(otu_table0[,i]~1+offset(log(sfs)),family = poisson))
mu=exp(coef(fit))
params[i,]=c(mu,0)
}
}
list(otu.mat=otu_table0,mu=params[,'mu'],phi=params[,'phi'])
}
fit.ZINB<-function(otu_table){
otu_table0=as.data.frame(otu_table)
otu_table0=as.matrix(otu_table0)
notu=ncol(otu_table0)
sfs=apply(otu_table0,1,mean); sfs=sfs/median(sfs)
params=matrix(NA,notu,ncol=3)
colnames(params)=c('mu','phi','p0')
for (i in 1:notu) {
if(sum(otu_table0[,i])>5){
ctrl=pscl::zeroinfl.control(method = "L-BFGS-B")
ctrl$reltol=NULL
ctrl$factr=1e-3/.Machine$double.eps
fit=try(pscl::zeroinfl(otu_table0[,i]~1+offset(log(sfs))|1, dist = "negbin", link = "logit" , control=ctrl), silent=T)
if(methods::is(fit,"try-error")) {
fit=try(glm.nb(otu_table0[,i]~1+offset(log(sfs))))
phi=1/fit$theta
mu=exp(coef(fit))
params[i,]=c(mu,phi,0)
}else{
mu=exp(fit$coefficients$count)
theta=fit$theta
p0=plogis(fit$coefficients$zero)
params[i,]=c(mu,1/theta,p0)
}
}else{
fit=try(glm.nb(otu_table0[,i]~1+offset(sfs)))
phi=1/fit$theta
mu=exp(coef(fit))
params[i,]=c(mu,phi,0)
}
}
list(otu.mat=otu_table0,mu=params[,'mu'],phi=params[,'phi'],p0=params[,'p0'])
}
fit.ZIP<-function(otu_table){
otu_table0=as.data.frame(otu_table)
otu_table0=as.matrix(otu_table0)
notu=ncol(otu_table0)
sfs=apply(otu_table0,1,mean); sfs=sfs/median(sfs)
params=matrix(NA,notu,ncol=2)
colnames(params)=c('mu','p0')
for (i in 1:notu) {
if(sum(otu_table0[,i])>5){
ctrl =pscl::zeroinfl.control(method = "L-BFGS-B")
ctrl$reltol= NULL
ctrl$factr=1e-3/.Machine$double.eps
fit=try(pscl::zeroinfl(otu_table0[,i]~1+offset(log(sfs))|1, dist = "poisson", link = "logit" , control=ctrl), silent=T)
if(methods::is(fit,"try-error")) {
fit=try(glm(otu_table0[,i]~1+offset(log(sfs)),family = quasipoisson))
mu=exp(coef(fit))
params[i,]=c(mu,0)
}else{
mu=exp(fit$coefficients$count)
p0=plogis(fit$coefficients$zero)
params[i,]=c(mu,p0)
}
}else{
fit=try(glm(otu_table0[,i]~1+offset(log(sfs)),family = quasipoisson))
mu=exp(coef(fit))
params[i,]=c(mu,0)
}
}
list(otu.mat=otu_table0,mu=params[,'mu'],p0=params[,'p0'])
}
estParams<-function(otu_table,Sigma=NULL,distrib=c('NB','ZINB','ZIP')){
distrib=match.arg(distrib)
if(is.null(Sigma)) Sigma=estCov(otu_table,distrib)
params=list()
params$Sigma=Sigma
fit.distrib=switch(distrib,ZIP=fit.ZIP, NB=fit.NB, ZINB=fit.ZINB)
out=fit.distrib(otu_table)
params$otu.mat=out$otu.mat
params$mu=out$mu
params$phi=out$phi
params$p0=out$phi
params
# if(distrib=='NB'){
#   return(list(Sigma=Sigma,mu=out$mu,phi=out$phi,otu.mat=out$otu.mat))
# }else if(distrib=='ZINB'){
#   return(list(Sigma=Sigma,mu=out$mu,phi=out$phi,p0=out$p0,otu.mat=out$otu.mat))
# }else if(distrib=='ZIP'){
#   return(list(Sigma=Sigma,mu=out$mu,p0=out$p0,otu.mat=out$otu.mat))
# }
}
#params=estParams(otu_table,Sigma=Sigma,distrib=c('NB'))
source('estimation.R')
params=estParams(otu_table,Sigma=Sigma,distrib=c('NB'))
params2=params
load('~/Dropbox/projects/powmeta/data/combo.params.NB.rda')
cor(params$mu,params2$mu)
names(params)
cor(params$phi,params2$phi)
getwd()
setwd('../../')
getwd()
setwd('~/Dropbox/projects/powmeta/code')
source('utils.sim.R')
source('utils.simZINB.R')
source('utils.est.R')
load('~/Desktop/combo.params.ZINB.rda')
p0=params$p0
lp0=log(p0)
phi=params$phi
lphi0=log(phi)
mu=params$mu
lmu0=log(mu)
Sigma=params$Sigma
hist(lphi0)
hist(lmu0)
Sigma2=diag(nrow(Sigma))
sim.params=setParams.ZINB(nOTU=1000,p.DA=0.05,Sigma=Sigma2,lmu0, lphi0,lp0,lfc.mu=3,
comp=c('no'),depth=1,
sim.seed=1234)
x=simCounts.ZINB(sim.params,n1=10,n2=10)
sum(x$counts==0)/length(x$counts)
colSums(x$counts)
sim.out = runSims.ZINB(n1s = c(20,40,60), n2s = c(20,40,60),sim.params=sim.params,DAmethod="edgeR", nsims=5)
assess.out = assess(sim.out, alpha.type="fdr", alpha.level=0.1,stratify=c(0,0.2,0.4,0.6,1),stratify.type="density")
sum.out=summaryAssess(assess.out,assess.type='overall')
source('utils.figure.R')
source('utils.figure.R')
plotStrataAll(assess.out,stratify.by='density',is.legend=F)
Sigma2=diag(nrow(Sigma))
sim.params=setParams.ZINB(nOTU=1000,p.DA=0.05,Sigma=Sigma,lmu0, lphi0,lp0,lfc.mu=3,
comp=c('no'),depth=1,
sim.seed=1234)
x=simCounts.ZINB(sim.params,n1=10,n2=10)
sum(x$counts==0)/length(x$counts)
colSums(x$counts)
sim.out = runSims.ZINB(n1s = c(20,40,60), n2s = c(20,40,60),sim.params=sim.params,DAmethod="edgeR", nsims=5)
assess.out = assess(sim.out, alpha.type="fdr", alpha.level=0.1,stratify=c(0,0.2,0.4,0.6,1),stratify.type="density")
sum.out=summaryAssess(assess.out,assess.type='overall')
sim.params=setParams.ZINB(nOTU=1000,p.DA=0.05,Sigma=NULL,lmu0, lphi0,lp0,lfc.mu=3,
comp=c('no'),depth=1,
sim.seed=1234)
x=simCounts.ZINB(sim.params,n1=10,n2=10)
sum(x$counts==0)/length(x$counts)
colSums(x$counts)
sim.out = runSims.ZINB(n1s = c(20,40,60), n2s = c(20,40,60),sim.params=sim.params,DAmethod="edgeR", nsims=5)
assess.out = assess(sim.out, alpha.type="fdr", alpha.level=0.1,stratify=c(0,0.2,0.4,0.6,1),stratify.type="density")
sum.out=summaryAssess(assess.out,assess.type='overall')
Sigma2=diag(nrow(Sigma))
sim.params=setParams.ZINB(nOTU=1000,p.DA=0.05,Sigma=Sigma,lmu0, lphi0,lp0,lfc.mu=2,
comp=c('no'),depth=1,
sim.seed=1234)
x=simCounts.ZINB(sim.params,n1=10,n2=10)
sum(x$counts==0)/length(x$counts)
colSums(x$counts)
sim.out = runSims.ZINB(n1s = c(20,40,60), n2s = c(20,40,60),sim.params=sim.params,DAmethod="edgeR", nsims=5)
assess.out = assess(sim.out, alpha.type="fdr", alpha.level=0.1,stratify=c(0,0.2,0.4,0.6,1),stratify.type="density")
sum.out=summaryAssess(assess.out,assess.type='overall')
Sigma2=diag(nrow(Sigma))
sim.params=setParams.ZINB(nOTU=1000,p.DA=0.05,Sigma=Sigma,lmu0, lphi0,lp0,lfc.mu=2,
comp=c('yes'),depth=1,
sim.seed=1234)
x=simCounts.ZINB(sim.params,n1=10,n2=10)
sum(x$counts==0)/length(x$counts)
colSums(x$counts)
sim.out = runSims.ZINB(n1s = c(20,40,60), n2s = c(20,40,60),sim.params=sim.params,DAmethod="edgeR", nsims=5)
assess.out = assess(sim.out, alpha.type="fdr", alpha.level=0.1,stratify=c(0,0.2,0.4,0.6,1),stratify.type="density")
sum.out=summaryAssess(assess.out,assess.type='overall')
rm(list=ls())
getwd()
setwd('~/Dropbox/projects/powmeta/code')
source('utils.sim.R')
source('utils.simZIP.R')
source('utils.est.R')
load('~/Desktop/combo.params.ZIP.rda')
p0=params$p0
lp0=log(p0)
mu=params$mu
lmu0=log(mu)
Sigma=params$Sigma
hist(lp0)
hist(p0)
hist(lmu0)
Sigma2=diag(nrow(Sigma))
sim.params=setParams.ZIP(nOTU=1000,p.DA=0.05,Sigma=Sigma,lmu0,lp0,lfc.mu=2,
comp=c('no'),depth=1,
sim.seed=1234)
x=simCounts.ZIP(sim.params,n1=10,n2=10)
sum(x$counts==0)/length(x$counts)
colSums(x$counts)
sim.out = runSims.ZIP(n1s = c(20,40,60), n2s = c(20,40,60),sim.params=sim.params,DAmethod="edgeR", nsims=5)
assess.out = assess(sim.out, alpha.type="fdr", alpha.level=0.1,stratify=c(0,0.2,0.4,0.6,1),stratify.type="density")
sum.out=summaryAssess(assess.out,assess.type='overall')
rm(list=ls())
setwd('~/Dropbox/projects/powmeta/code')
source('utils.sim.R')
source('utils.simNB.R')
load('~/Dropbox/projects/powmeta/data/combo.params.NB.rda')
lmu0=log(params$mu)
lphi0=log(params$phi)
Sigma=params$Sigma
Sigma2=diag(nrow(Sigma))
sim.params=setParams.NB(nOTU=1000,p.DA=0.05,Sigma=Sigma,lmu0, lphi0,lfc.mu=2,
comp=c('no'),depth=1,
sim.seed=1234)
x=simCounts.NB(sim.params,n1=10,n2=10)
sum(x$counts==0)/length(x$counts)
colSums(x$counts)
sim.out = runSims.NB(n1s = c(20,40,60), n2s = c(20,40,60),sim.params=sim.params,DAmethod="edgeR", nsims=5)
assess.out = assess(sim.out, alpha.type="fdr", alpha.level=0.1,stratify.type="density")
sum.out=summaryAssess(assess.out,assess.type='overall')
dim(otu.mat)
otu.mat=params$otu.mat
dim(otu.mat)
otu_table=t(otu.mat)
dim(otu_table)
getwd()
setwd('R/code')
setwd('powmeta/R')
getwd()
install.packages("pscl")
